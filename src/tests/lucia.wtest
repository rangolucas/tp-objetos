import musico.*
import Presentacion.*
import lugares.*
import Cancion.*
import categoriasMusico.*

describe "lucia"{
	
	var joaquin = new MusicoDeGrupo('Pimpinela', 20, #{},new Larguero(300) ,new PorCuantosSePresentan(100),null)
	var lucia = new MusicoVocalista('Pimpinela', 70, #{}, new Palabrero('familia'), new PorCapacidad(5000,500))

	test "Lucia canta en Pimpinela, su habilidad es de 50."{
		assert.equals(50, lucia.habilidadXPresentacion(new Presentacion(new Date(20, 04, 2017), lunaPark, #{joaquin, lucia})))
	}
	test "Lucia canta en el grupo pimpinela, y lanza su carrera como solista dejando dicho grupo. Su habilidad es de 70."{
		assert.equals(70, lucia.habilidadXPresentacion(new Presentacion(new Date(20, 04, 2017), lunaPark, #{lucia})))
	}
	test "Lucia interpreta bien la cancion 'La Familia'."{
		assert.that(lucia.categoria().interpretaBien(new Cancion("La Familia" , "Quiero brindar por mi gente sencilla, por el amor brindo por la familia.", 264)))
	}
	/* ESTE TEST YA NO ES VALIDO (ENTREGA 3)
	test "Lucia no interpreta bien la cancion 'Cisne', porque no contiene la palabra 'familia'."{
		assert.notThat(lucia.interpretaBien(new Cancion("Cisne", "Hoy el viento se abri� qued� vac�o el aire una vez m�s y el manantial brot�
		 									y nadie est� aqu� y puedo ver que solo estallan las hojas al brillar.", 312)))
	}
	* 
	*/
	test "Lucia hace una presentacion en Luna Park, cobra 500, porque la capacidad del Luna es mayor a 5000."{
		assert.equals(500, lucia.metodoDeCobro().cobra(new Presentacion(new Date(20, 04, 2017), lunaPark, #{lucia, joaquin})))
	}
	test "Lucias hace una presentacion en La Trastienda, cobra 400 porque la misma tiene una capacidad menor a 5000."{
		assert.equals(400, lucia.metodoDeCobro().cobra(new Presentacion(new Date(15, 11, 2017), trastienda, #{ lucia, joaquin})))
	}
}